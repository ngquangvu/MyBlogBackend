// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// npx prisma migrate dev
// ======== Model ========

model User {
  id             String          @id @default(uuid())
  firstName      String          @map("first_name")
  lastName       String          @map("last_name")
  email          String          @unique
  role           Role            @default(USER)
  password       String

  posts          Post[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("users")
}


model Post {
  id                Int                @id @default(autoincrement())
  author            User?              @relation(fields: [authorId], references: [id])
  authorId          String?
  parentId          Int?
  title             String
  metaTitle         String?
  slug              String?
  summary           String?
  content           String?
  thumbnail         String?
  url               String?
  published         Boolean

  categories        Category[]
  tags              Tag[]
  comments          PostComment[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("posts")
}


model PostComment {
  id                Int                @id @default(autoincrement())
  postId            Int
  parentId          Int
  title             String
  published         Boolean  @default(false)
  content           String

  Post              Post?              @relation(fields: [postId], references: [id]) // A comment can have one post

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("post_comments")
}


model Category {
  id                Int               @id @default(autoincrement())
  parentId          Int?
  title             String
  metaTitle         String?
  slug              String?
  content           String?
  posts             Post[]

  @@map("categories")
}


model Tag {
  id                Int               @id @default(autoincrement())
  title             String
  metaTitle         String?
  slug              String?
  content           String?
  posts             Post[]

  @@map("tags")
}


enum Role {
  USER
  AUTHOR
  ADMIN
}
